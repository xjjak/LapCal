import asyncio
from bleak import BleakClient

address = "08:3A:8D:0F:35:2A"
DATA_UUID = "68bf07fb-d00b-4c80-a796-f8be82b5dea7"

async def callback(sender, data: bytearray):
  #  global client
    print(f"{data.hex()}")
    timestamp = int.from_bytes(data[:8], byteorder='big', signed=False)
    out = [timestamp]
    out_str = str(timestamp) + ':'
    for i in range(0,36):
        s = 8+2*i
        out.append(int.from_bytes(data[s:s+2], byteorder='big', signed=True))
        if (i+1) == 36:
            out_str += str(out[i+1])
        elif (i+1) % 6 == 0:
            out_str += str(out[i+1]) + ':'
        else:
            out_str += str(out[i+1]) + ';'
    print(out_str)

#        print(str(data[s:s+2]) + "  " + str(int.from_bytes(data[s:s+2], byteorder='big', signed=True)))
#    print(f"{data[:8].hex()}")
  
   # await client.read_gatt_char(DATA_UUID)
#    number = await client.read_gatt_char(DATA_UUID)
 #   print(number.hex())
    



async def main(address):
   client = BleakClient(address, services = ["f5aea478-9ec3-4bcf-af20-7f75e7c68c9d"]);
   try:
       await client.connect();
       await client.start_notify(DATA_UUID, callback)
       while True:
           await asyncio.sleep(0)
   except KeyboardInterrupt:
       exit()
   except Exception as e:
       print(e)
   finally:
       await client.disconnect()
       
#        print("Model Number: {0}".format("".join(map(chr, model_number))))

asyncio.run(main(address))
